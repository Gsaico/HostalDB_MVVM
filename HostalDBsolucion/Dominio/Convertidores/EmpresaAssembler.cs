//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/06/15 - 08:56:05
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Dominio.Dtos;
using PersistenciaDatos;

namespace Dominio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="Empresa"/> and <see cref="EmpresaDTO"/>.
    /// </summary>
    public static partial class EmpresaAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="EmpresaDTO"/> converted from <see cref="Empresa"/>.</param>
        static partial void OnDTO(this Empresa entity, EmpresaDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Empresa"/> converted from <see cref="EmpresaDTO"/>.</param>
        static partial void OnEntity(this EmpresaDTO dto, Empresa entity);

        /// <summary>
        /// Converts this instance of <see cref="EmpresaDTO"/> to an instance of <see cref="Empresa"/>.
        /// </summary>
        /// <param name="dto"><see cref="EmpresaDTO"/> to convert.</param>
        public static Empresa ToEntity(this EmpresaDTO dto)
        {
            if (dto == null) return null;

            var entity = new Empresa();

            entity.RUC = dto.RUC;
            entity.RazonSocial = dto.RazonSocial;
            entity.Direccion = dto.Direccion;
            entity.Telefono = dto.Telefono;
            entity.Email = dto.Email;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Empresa"/> to an instance of <see cref="EmpresaDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Empresa"/> to convert.</param>
        public static EmpresaDTO ToDTO(this Empresa entity)
        {
            if (entity == null) return null;

            var dto = new EmpresaDTO();

            dto.RUC = entity.RUC;
            dto.RazonSocial = entity.RazonSocial;
            dto.Direccion = entity.Direccion;
            dto.Telefono = entity.Telefono;
            dto.Email = entity.Email;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="EmpresaDTO"/> to an instance of <see cref="Empresa"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Empresa> ToEntities(this IEnumerable<EmpresaDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Empresa"/> to an instance of <see cref="EmpresaDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<EmpresaDTO> ToDTOs(this IEnumerable<Empresa> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }
        public static void Actualizar(Dominio.Dtos.EmpresaDTO dto, PersistenciaDatos.Empresa entity)
        {
            entity.RUC = dto.RUC;
            entity.RazonSocial = dto.RazonSocial;
            entity.Direccion = dto.Direccion;
            entity.Telefono = dto.Telefono;
            entity.Email = dto.Email;

        }
    }
}
